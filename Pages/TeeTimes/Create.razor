@page "/teetimes/create"
@using Data
@inject TeeTimeService teeTimeService
@inject GolfMemberService golfMemberService
@inject NavigationManager navManager
@inject IJSRuntime js

<h3>Create</h3>
<TeeTimeForm ButtonText="Create TeeTime" tee="@teeTime"
            OnValidSubmit="@CreateTeeTime" />

@code {
    TeeTime teeTime = new TeeTime();
    async void CreateTeeTime()
    {
        teeTime.Player1 = golfMemberService.GetMember(teeTime.Player1Id);
        teeTime.Player2 = golfMemberService.GetMember(teeTime.Player2Id);
        teeTime.Player3 = golfMemberService.GetMember(teeTime.Player3Id);
        teeTime.Player4 = golfMemberService.GetMember(teeTime.Player4Id);

        int returnOption = await teeTimeService.AddTeeTimeAsync(teeTime);

        if(returnOption == 1)
        {
            await js.InvokeVoidAsync("alert", $"Tee Time booked for {teeTime.RoundDate.ToShortDateString()} at {teeTime.RoundHour}:{teeTime.RoundMinute.ToString("D2")}!");
            navManager.NavigateTo("teetimes/view");
        }
        else if(returnOption == 0)
        {
            await js.InvokeVoidAsync("alert", "This time is taken, please choose another time!!");
        }
        else
        {
            await js.InvokeVoidAsync("alert", $@"{golfMemberService.GetMember(returnOption).FirstName} {golfMemberService.GetMember(returnOption).LastName} has already booked a tee time for {teeTime.RoundDate.ToShortDateString()}.
Members are only alowed to book 1 round per day");
        }
        
        
    }
        
    

}
