name: Configure Azure environment
on:
  workflow_dispatch:
    inputs:
      environment: 
        type: choice
        description: 'Environment'
        default: staging
        options: 
        - staging
        - production
  
env:
  AZURE_RESOURCE_GROUP: golfapp
  AZURE_APP_PLAN: golf-app-deployment
  STAGE_AZURE_APP_PLAN: stage-golf-app-deployment
  AZURE_LOCATION: '"North Europe"'
  AZURE_WEBAPP_NAME: leslwingbast-golfapp
  STAGE_AZURE_WEBAPP_NAME: stage-leslwingbast-golfapp
jobs:
  
  create-staging-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/leslwingbast/l00177784_ca2_golfapp
          labels: ${{ steps.meta.outputs.labels }}

  setup-up-azure-staging:
    runs-on: ubuntu-latest

    if: "${{ inputs.environment == 'staging' }}"
    steps:
     - name: Checkout repository
       uses: actions/checkout@v2
     - name: Azure login
       uses: azure/login@v1
       with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}      
     - name: Create Azure resource group
       if: success()
       run: |
        az group create --location ${{env.AZURE_LOCATION}} --name ${{env.AZURE_RESOURCE_GROUP}} --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}
     - name: Create Azure app service plan
       if: success()
       run: |
        az appservice plan create --resource-group ${{env.AZURE_RESOURCE_GROUP}} --name ${{env.AZURE_APP_PLAN}} --is-linux --sku F1 --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}
     - name: Create webapp resource
       if: success()
       run: |  
        az webapp create --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --plan ${{env.AZURE_APP_PLAN }} --name ${{ env.STAGE_AZURE_WEBAPP_NAME }} --deployment-container-image-name nginx --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}
     - name: Configure webapp to use GitHub Packages
       if: success()
       run: |
        az webapp config container set --docker-custom-image-name nginx --docker-registry-server-password ${{secrets.REGISTRY_PASSWORD}} --docker-registry-server-url https://ghcr.io --docker-registry-server-user ${{github.actor}} --name ${{env.STAGE_AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}
  
  setup-up-azure-production:
    runs-on: ubuntu-latest
  
    if: "${{ inputs.environment == 'production' }}"
    steps:
     - name: Checkout repository
       uses: actions/checkout@v2
     - name: Azure login
       uses: azure/login@v1
       with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}      
     - name: Create Azure resource group
       if: success()
       run: |
        az group create --location ${{env.AZURE_LOCATION}} --name ${{env.AZURE_RESOURCE_GROUP}} --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}
     - name: Create Azure app service plan
       if: success()
       run: |
        az appservice plan create --resource-group ${{env.AZURE_RESOURCE_GROUP}} --name ${{env.STAGE_AZURE_APP_PLAN}} --is-linux --sku F1 --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}
     - name: Create webapp resource
       if: success()
       run: |  
        az webapp create --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --plan ${{env.STAGE_AZURE_APP_PLAN }} --name ${{ env.STAGE_AZURE_WEBAPP_NAME }} --deployment-container-image-name nginx --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}
     - name: Configure webapp to use GitHub Packages
       if: success()
       run: |
        az webapp config container set --docker-custom-image-name nginx --docker-registry-server-password ${{secrets.REGISTRY_PASSWORD}} --docker-registry-server-url https://ghcr.io --docker-registry-server-user ${{github.actor}} --name ${{env.STAGE_AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}
        
    
